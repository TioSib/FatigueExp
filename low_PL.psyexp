<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant':'', 'session':'001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="(1024, 768)" valType="list"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="color"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="low_PL" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="MIDDLE_BUTTON" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="Hi">
      <TextComponent name="instr_screen">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="instr_screen" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Эксперимент!!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="intsr_key">
        <Param name="allowedKeys" updates="set every repeat" val="'y','n','left','right','space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="intsr_key" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Bye">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Спс!!!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="High_PL"/>
    <Routine name="Low_PL"/>
    <Routine name="fix">
      <TextComponent name="fix_cross">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="fix_cross" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="mask">
      <TextComponent name="up_up_letter">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="up_up_letter" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$up_up" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="left_up_letter">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="left_up_letter" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.1, 0.05)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$left_up" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="left_down_letter">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="left_down_letter" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.1, -0.05)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$left_down" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="down_down_letter">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="down_down_letter" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$down_down" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="right_down_letter">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="right_down_letter" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.1, -0.05)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$right_down" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="right_up_letter">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="right_up_letter" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.1, 0.05)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$right_up" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="set every repeat" val="'n','x'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="acc = []&amp;#10;" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="acc = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if (key_resp.keys) {&amp;#10;    if ((key_resp.keys === condition)) {&amp;#10;        acc.push(&quot;1&quot;);&amp;#10;    } else {&amp;#10;        acc.push(&quot;0&quot;);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if key_resp.keys:&amp;#10;    if key_resp.keys == condition:&amp;#10;        acc.append('1')&amp;#10;    else:&amp;#10;        acc.append('0')" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="side_right">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="num"/>
        <Param name="name" updates="None" val="side_right" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.25, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$SIDE_right" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="side_left">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="num"/>
        <Param name="name" updates="None" val="side_left" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.25, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$SIDE_left" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="block_3">
      <TextComponent name="block_text_3">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="block_text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Блок 3" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Hi"/>
    <LoopInitiator loopType="TrialHandler" name="low_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'H'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'M'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'K'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'Z'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'W'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Neut'), ('SIDE_left', 'V'), ('corr_ans', 'N'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'H'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'M'), ('corr_ans', 'None'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'M'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'K'), ('corr_ans', 'None'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'K'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'Z'), ('corr_ans', 'None'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'Z'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'W'), ('corr_ans', 'None'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'O'), ('right_down', 'W'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'V'), ('corr_ans', 'None'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'V'), ('condition', 'Zero'), ('SIDE_left', 'K'), ('corr_ans', 'None'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'H'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'M'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'K'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'Z'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'W'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Neut'), ('SIDE_left', 'V'), ('corr_ans', 'X'), ('SIDE_right', ' ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'H')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'N'), ('SIDE_right', 'V')]), OrderedDict([('up_up', 'H'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', ' '), ('corr_ans', 'None'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'M'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', ' '), ('corr_ans', 'None'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'K'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', ' '), ('corr_ans', 'None'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'Z'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', ' '), ('corr_ans', 'None'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'O'), ('right_down', 'W'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', ' '), ('corr_ans', 'None'), ('SIDE_right', 'V')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'V'), ('condition', 'Zero'), ('SIDE_left', ' '), ('corr_ans', 'None'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Inco'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Cong'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'H')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Neut'), ('SIDE_left', ' '), ('corr_ans', 'X'), ('SIDE_right', 'V')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli_low.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="low_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix"/>
    <Routine name="mask"/>
    <LoopTerminator name="low_1"/>
    <Routine name="block_3"/>
    <LoopInitiator loopType="TrialHandler" name="low_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'H'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'M'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'K'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'Z'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'W'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Neut'), ('SIDE_left', 'V'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'H'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'M'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'M'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'K'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'K'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'Z'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'Z'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'W'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'O'), ('right_down', 'W'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'V'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'V'), ('condition', 'Zero'), ('SIDE_left', 'K'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'H'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'M'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'K'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'Z'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'W'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Neut'), ('SIDE_left', 'V'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'H')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'V')]), OrderedDict([('up_up', 'H'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'M'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'K'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'Z'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'O'), ('right_down', 'W'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'V')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'V'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'H')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'V')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli_low.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="low_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix"/>
    <Routine name="mask"/>
    <LoopTerminator name="low_2"/>
    <Routine name="block_3"/>
    <LoopInitiator loopType="TrialHandler" name="low_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Cong'), ('SIDE_left', 'N'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Inco'), ('SIDE_left', 'X'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'H'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'M'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'K'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'Z'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'W'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Neut'), ('SIDE_left', 'V'), ('corr_ans', 'N'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'H'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'M'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'M'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'K'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'K'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'Z'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'Z'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'W'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'O'), ('right_down', 'W'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', 'V'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'V'), ('condition', 'Zero'), ('SIDE_left', 'K'), ('corr_ans', 'None'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Inco'), ('SIDE_left', 'N'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Cong'), ('SIDE_left', 'X'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'H'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'M'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'K'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'Z'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', 'W'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Neut'), ('SIDE_left', 'V'), ('corr_ans', 'X'), ('SIDE_right', '      ')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'N'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'H')]), OrderedDict([('up_up', 'o'), ('left_up', 'N'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'N'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'N'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'N'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'N'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'N'), ('SIDE_right', 'V')]), OrderedDict([('up_up', 'H'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'M'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'K'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'Z'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'O'), ('right_down', 'W'), ('right_up', 'o'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'V')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'V'), ('condition', 'Zero'), ('SIDE_left', '      '), ('corr_ans', 'None'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Inco'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'N')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Cong'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'X')]), OrderedDict([('up_up', 'X'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'H')]), OrderedDict([('up_up', 'o'), ('left_up', 'X'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'M')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'X'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'K')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'X'), ('right_down', 'o'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'Z')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'X'), ('right_up', 'o'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'W')]), OrderedDict([('up_up', 'o'), ('left_up', 'o'), ('left_down', 'o'), ('down_down', 'o'), ('right_down', 'o'), ('right_up', 'X'), ('condition', 'Neut'), ('SIDE_left', '      '), ('corr_ans', 'X'), ('SIDE_right', 'V')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli_low.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="low_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix"/>
    <Routine name="mask"/>
    <LoopTerminator name="low_3"/>
    <Routine name="Bye"/>
  </Flow>
</PsychoPy2experiment>
